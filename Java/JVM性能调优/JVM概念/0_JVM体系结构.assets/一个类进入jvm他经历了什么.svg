<svg id="SvgjsSvg1006" width="956" height="1058" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs"><defs id="SvgjsDefs1007"><pattern patternUnits="userSpaceOnUse" id="pattern_mark_0" width="300" height="300"><text x="150" y="100" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern><pattern patternUnits="userSpaceOnUse" id="pattern_mark_1" width="300" height="300"><text x="150" y="200" fill="rgba(229,229,229,0.8)" font-size="18" transform="rotate(-45, 150, 150)" style="dominant-baseline: middle; text-anchor: middle;"></text></pattern><marker id="SvgjsMarker1025" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1026" d="M0,0 L14,5 L0,10 L0,0" fill="#aeb9c4" stroke="#aeb9c4" stroke-width="1"></path></marker><marker id="SvgjsMarker1035" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1036" d="M0,0 L14,5 L0,10 L0,0" fill="#aeb9c4" stroke="#aeb9c4" stroke-width="1"></path></marker><marker id="SvgjsMarker1045" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1046" d="M0,0 L14,5 L0,10 L0,0" fill="#aeb9c4" stroke="#aeb9c4" stroke-width="1"></path></marker><marker id="SvgjsMarker1073" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1074" d="M0,0 L14,5 L0,10 L0,0" fill="#aeb9c4" stroke="#aeb9c4" stroke-width="1"></path></marker><marker id="SvgjsMarker1077" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1078" d="M0,0 L14,5 L0,10 L0,0" fill="#aeb9c4" stroke="#aeb9c4" stroke-width="1"></path></marker><marker id="SvgjsMarker1081" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1082" d="M0,0 L14,5 L0,10 L0,0" fill="#aeb9c4" stroke="#aeb9c4" stroke-width="1"></path></marker><marker id="SvgjsMarker1085" markerWidth="14" markerHeight="10" refX="10" refY="5" viewBox="0 0 14 10" orient="auto" markerUnits="userSpaceOnUse" stroke-dasharray="0,0"><path id="SvgjsPath1086" d="M0,0 L14,5 L0,10 L0,0" fill="#aeb9c4" stroke="#aeb9c4" stroke-width="1"></path></marker></defs><rect id="svgbackgroundid" width="956" height="1058" fill="#ffffff"></rect><rect id="SvgjsRect1009" width="956" height="1058" fill="url(#pattern_mark_0)"></rect><rect id="SvgjsRect1010" width="956" height="1058" fill="url(#pattern_mark_1)"></rect><g id="SvgjsG1011" transform="translate(25,25)"><path id="SvgjsPath1012" d="M 0 49L 0 0L 100 0L 100 49Q 75 35 50 49Q 25 63 0 49Z" stroke="rgba(174,185,196,1)" stroke-width="2" fill-opacity="1" fill="#f2f7fa"></path><g id="SvgjsG1013"><text id="SvgjsText1014" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="100px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="13.45" transform="rotate(0)"><tspan id="SvgjsTspan1015" dy="17" x="50"><tspan id="SvgjsTspan1016" style="text-decoration:;">class文件</tspan></tspan></text></g></g><g id="SvgjsG1017" transform="translate(25,132)"><path id="SvgjsPath1018" d="M 13 0L 87 0C 104.33333333333333 0 104.33333333333333 39 87 39L 13 39C -4.333333333333333 39 -4.333333333333333 0 13 0Z" stroke="rgba(86,146,48,1)" stroke-width="2" fill-opacity="1" fill="#e5f6da"></path><g id="SvgjsG1019"><text id="SvgjsText1020" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="7.75" transform="rotate(0)"><tspan id="SvgjsTspan1021" dy="17" x="50"><tspan id="SvgjsTspan1022" style="text-decoration:;">加载</tspan></tspan></text></g></g><g id="SvgjsG1023"><path id="SvgjsPath1024" d="M75 75L75 103L75 103L75 128.4" stroke="#aeb9c4" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1025)"></path></g><g id="SvgjsG1027" transform="translate(25.000000000000114,242.83333333333337)"><path id="SvgjsPath1028" d="M 13 0L 87 0C 104.33333333333333 0 104.33333333333333 39 87 39L 13 39C -4.333333333333333 39 -4.333333333333333 0 13 0Z" stroke="rgba(86,146,48,1)" stroke-width="2" fill-opacity="1" fill="#e5f6da"></path><g id="SvgjsG1029"><text id="SvgjsText1030" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="7.75" transform="rotate(0)"><tspan id="SvgjsTspan1031" dy="17" x="50"><tspan id="SvgjsTspan1032" style="text-decoration:;">验证</tspan></tspan></text></g></g><g id="SvgjsG1033"><path id="SvgjsPath1034" d="M75 172L75 206.91666666666669L75.00000000000011 206.91666666666669L75.00000000000011 239.23333333333335" stroke="#aeb9c4" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1035)"></path></g><g id="SvgjsG1037" transform="translate(25.000000000000057,341.50000000000017)"><path id="SvgjsPath1038" d="M 13 0L 87 0C 104.33333333333333 0 104.33333333333333 39 87 39L 13 39C -4.333333333333333 39 -4.333333333333333 0 13 0Z" stroke="rgba(86,146,48,1)" stroke-width="2" fill-opacity="1" fill="#e5f6da"></path><g id="SvgjsG1039"><text id="SvgjsText1040" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="7.75" transform="rotate(0)"><tspan id="SvgjsTspan1041" dy="17" x="50"><tspan id="SvgjsTspan1042" style="text-decoration:;">准备</tspan></tspan></text></g></g><g id="SvgjsG1043"><path id="SvgjsPath1044" d="M75.00000000000011 282.83333333333337L75.00000000000011 311.66666666666674L75.00000000000006 311.66666666666674L75.00000000000006 337.90000000000015" stroke="#aeb9c4" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1045)"></path></g><g id="SvgjsG1047" transform="translate(25,713.1666666666667)"><path id="SvgjsPath1048" d="M 13 0L 87 0C 104.33333333333333 0 104.33333333333333 39 87 39L 13 39C -4.333333333333333 39 -4.333333333333333 0 13 0Z" stroke="rgba(86,146,48,1)" stroke-width="2" fill-opacity="1" fill="#e5f6da"></path><g id="SvgjsG1049"><text id="SvgjsText1050" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="7.75" transform="rotate(0)"><tspan id="SvgjsTspan1051" dy="17" x="50"><tspan id="SvgjsTspan1052" style="text-decoration:;">初始化</tspan></tspan></text></g></g><g id="SvgjsG1053" transform="translate(25,539)"><path id="SvgjsPath1054" d="M 13 0L 87 0C 104.33333333333333 0 104.33333333333333 39 87 39L 13 39C -4.333333333333333 39 -4.333333333333333 0 13 0Z" stroke="rgba(86,146,48,1)" stroke-width="2" fill-opacity="1" fill="#e5f6da"></path><g id="SvgjsG1055"><text id="SvgjsText1056" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="7.75" transform="rotate(0)"><tspan id="SvgjsTspan1057" dy="17" x="50"><tspan id="SvgjsTspan1058" style="text-decoration:;">解析</tspan></tspan></text></g></g><g id="SvgjsG1059" transform="translate(25.000000000000114,800.1666666666663)"><path id="SvgjsPath1060" d="M 13 0L 87 0C 104.33333333333333 0 104.33333333333333 39 87 39L 13 39C -4.333333333333333 39 -4.333333333333333 0 13 0Z" stroke="rgba(86,146,48,1)" stroke-width="2" fill-opacity="1" fill="#e5f6da"></path><g id="SvgjsG1061"><text id="SvgjsText1062" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="7.75" transform="rotate(0)"><tspan id="SvgjsTspan1063" dy="17" x="50"><tspan id="SvgjsTspan1064" style="text-decoration:;">使用</tspan></tspan></text></g></g><g id="SvgjsG1065" transform="translate(25,937)"><path id="SvgjsPath1066" d="M 13 0L 87 0C 104.33333333333333 0 104.33333333333333 39 87 39L 13 39C -4.333333333333333 39 -4.333333333333333 0 13 0Z" stroke="rgba(86,146,48,1)" stroke-width="2" fill-opacity="1" fill="#e5f6da"></path><g id="SvgjsG1067"><text id="SvgjsText1068" font-family="微软雅黑" text-anchor="middle" font-size="14px" width="80px" fill="#323232" font-weight="400" align="middle" lineHeight="125%" anchor="middle" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="7.75" transform="rotate(0)"><tspan id="SvgjsTspan1069" dy="17" x="50"><tspan id="SvgjsTspan1070" style="text-decoration:;">卸载</tspan></tspan></text></g></g><g id="SvgjsG1071"><path id="SvgjsPath1072" d="M75.00000000000006 381.50000000000017L75.00000000000006 459.7500000000001L75 459.7500000000001L75 535.4" stroke="#aeb9c4" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1073)"></path></g><g id="SvgjsG1075"><path id="SvgjsPath1076" d="M75 579L75 645.5833333333334L75 645.5833333333334L75 709.5666666666667" stroke="#aeb9c4" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1077)"></path></g><g id="SvgjsG1079"><path id="SvgjsPath1080" d="M75 753.1666666666667L75 776.1666666666665L75.00000000000011 776.1666666666665L75.00000000000011 796.5666666666663" stroke="#aeb9c4" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1081)"></path></g><g id="SvgjsG1083"><path id="SvgjsPath1084" d="M75.00000000000011 840.1666666666663L75.00000000000011 888.0833333333331L75 888.0833333333331L75 933.4" stroke="#aeb9c4" stroke-width="2" fill="none" marker-end="url(#SvgjsMarker1085)"></path></g><g id="SvgjsG1087" transform="translate(155,95.75)"><path id="SvgjsPath1088" d="M 0 0L 634 0L 634 121.5L 0 121.5Z" stroke="none" fill="none"></path><g id="SvgjsG1089"><text id="SvgjsText1090" font-family="微软雅黑" text-anchor="start" font-size="14px" width="634px" fill="#323232" font-weight="400" align="top" lineHeight="200%" anchor="start" family="微软雅黑" size="14px" weight="400" font-style="" opacity="1" y="-8" transform="rotate(0)"><tspan id="SvgjsTspan1091" dy="28" x="0"><tspan id="SvgjsTspan1092" style="text-decoration:;">1. 加载：加载是类加载机制的一个过程，在加载阶段虚拟机主要完成三件事</tspan></tspan><tspan id="SvgjsTspan1093" dy="28" x="0"><tspan id="SvgjsTspan1094" style="text-decoration:;">      1.1 通过一个类的全名（包名+类名）获取此类二进制字节流</tspan></tspan><tspan id="SvgjsTspan1095" dy="28" x="0"><tspan id="SvgjsTspan1096" style="text-decoration:;">      1.2 将字节流所代表的静态存储结构转化为方法区的运行时数据结构</tspan></tspan><tspan id="SvgjsTspan1097" dy="28" x="0"><tspan id="SvgjsTspan1098" style="text-decoration:;">      1.3 在内存中生成一个代表这个类的java.lang.Class对象，作为方法去这个类的各种数据访问入口</tspan></tspan><tspan id="SvgjsTspan1099" dy="28" x="0"><tspan id="SvgjsTspan1100" style="text-decoration:;"> </tspan></tspan></text></g></g><g id="SvgjsG1101" transform="translate(154.99999999999977,234.50000000000006)"><path id="SvgjsPath1102" d="M 0 0L 697 0L 697 62.74652353922528L 0 62.74652353922528Z" stroke="none" fill="none"></path><g id="SvgjsG1103"><text id="SvgjsText1104" font-family="微软雅黑" text-anchor="start" font-size="13px" width="697px" fill="#323232" font-weight="400" align="top" lineHeight="200%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="-7.5" transform="rotate(0)"><tspan id="SvgjsTspan1105" dy="26" x="0"><tspan id="SvgjsTspan1106" style="text-decoration:;">2. 验证：Class文件的内容是否符合当前虚拟机要求，保证被加载类的正确性，不会危害虚拟机自身安全。</tspan></tspan><tspan id="SvgjsTspan1107" dy="26" x="0"><tspan id="SvgjsTspan1108" style="text-decoration:;">              主要包括四种验证，文件格式验证，源数据验证，字节码验证，符号引用验证。</tspan></tspan></text></g></g><g id="SvgjsG1109" transform="translate(152.49999999999983,314.49652353922545)"><path id="SvgjsPath1110" d="M 0 0L 702 0L 702 207.5590322812398L 0 207.5590322812398Z" stroke="none" fill="none"></path><g id="SvgjsG1111"><text id="SvgjsText1112" font-family="微软雅黑" text-anchor="start" font-size="13px" width="702px" fill="#323232" font-weight="400" align="top" lineHeight="200%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="-7.5" transform="rotate(0)"><tspan id="SvgjsTspan1113" dy="26" x="0"><tspan id="SvgjsTspan1114" style="text-decoration:;">3. 准备：为类变量</tspan><tspan id="SvgjsTspan1115" style="text-decoration:;fill: rgb(50, 50, 50);">（静态变量）</tspan><tspan id="SvgjsTspan1116" style="text-decoration:;">分配内存并且设置该类变量的默认初始值，即零值;</tspan></tspan><tspan id="SvgjsTspan1117" dy="26" x="0"><tspan id="SvgjsTspan1118" style="text-decoration:;">              不包含用final修饰的static，因为final在编译的时候就会分配了，准备阶段会显式初始化;</tspan></tspan><tspan id="SvgjsTspan1119" dy="26" x="0"><tspan id="SvgjsTspan1120" style="text-decoration:;">              不会为实例变量分配初始化，类变量会分配在方法区中，而实例变量是会随着对象-起分配到java堆中。</tspan></tspan><tspan id="SvgjsTspan1121" dy="26" x="0"><tspan id="SvgjsTspan1122" style="text-decoration:;">        public class Main {</tspan></tspan><tspan id="SvgjsTspan1123" dy="26" x="0"><tspan id="SvgjsTspan1124" style="text-decoration:;">                public static int a=1;          </tspan><tspan id="SvgjsTspan1125" style="text-decoration:;fill: rgb(50, 50, 50);"> // 类变量：被分配在方法区中，在类加载的准备阶段初始值为零</tspan></tspan><tspan id="SvgjsTspan1126" dy="26" x="0"><tspan id="SvgjsTspan1127" style="text-decoration:;">                public final static int b= 1; </tspan><tspan id="SvgjsTspan1128" style="text-decoration:;fill: rgb(50, 50, 50);"> // 准备阶段不处理，final在编译阶段就分配好。</tspan></tspan><tspan id="SvgjsTspan1129" dy="26" x="0"><tspan id="SvgjsTspan1130" style="text-decoration:;">                public int c = 1;                   </tspan><tspan id="SvgjsTspan1131" style="text-decoration:;fill: rgb(50, 50, 50);">// 实例变量:只会在堆中分配</tspan></tspan><tspan id="SvgjsTspan1132" dy="26" x="0"><tspan id="SvgjsTspan1133" style="text-decoration:;fill: rgb(50, 50, 50);">       }</tspan></tspan></text></g></g><g id="SvgjsG1134" transform="translate(152.4999999999999,539)"><path id="SvgjsPath1135" d="M 0 0L 776.166666666667 0L 776.166666666667 163.99999999999977L 0 163.99999999999977Z" stroke="none" fill="none"></path><g id="SvgjsG1136"><text id="SvgjsText1137" font-family="微软雅黑" text-anchor="start" font-size="13px" width="777px" fill="#323232" font-weight="400" align="top" lineHeight="200%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="-7.5" transform="rotate(0)"><tspan id="SvgjsTspan1138" dy="26" x="0"><tspan id="SvgjsTspan1139" style="text-decoration:;">4. 解析：将常量池内的符号引用转换为直接引用的过程。那什么是符号引用、直接引用?</tspan></tspan><tspan id="SvgjsTspan1140" dy="26" x="0"><tspan id="SvgjsTspan1141" style="text-decoration:;">       4.1 符号引用：一组符号来描述所引用的目标。符号引用的字面量形式明确定义在《java虚拟机规范》的Class文件格式中。</tspan></tspan><tspan id="SvgjsTspan1142" dy="26" x="0"><tspan id="SvgjsTspan1143" style="text-decoration:;">       4.2 直接引用:直接指向目标的指针、相对偏移量或一个间接定位到目标的句柄。</tspan></tspan><tspan id="SvgjsTspan1144" dy="26" x="0"><tspan id="SvgjsTspan1145" style="text-decoration:;">       String str= "abc"; //str就是符号引用       System.out.println(str);</tspan></tspan><tspan id="SvgjsTspan1146" dy="26" x="0"><tspan id="SvgjsTspan1147" style="text-decoration:;">       System.out.println("abc"); // </tspan><tspan id="SvgjsTspan1148" style="text-decoration:;fill: rgb(50, 50, 50);">经过解析后，直接变为</tspan></tspan></text></g></g><g id="SvgjsG1149" transform="translate(154.99999999999972,894.0000000000002)"><path id="SvgjsPath1150" d="M 0 0L 776.1666666666667 0L 776.1666666666667 138.88889312744118L 0 138.88889312744118Z" stroke="none" fill="none"></path><g id="SvgjsG1151"><text id="SvgjsText1152" font-family="微软雅黑" text-anchor="start" font-size="13px" width="777px" fill="#323232" font-weight="400" align="top" lineHeight="200%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="-7.5" transform="rotate(0)"><tspan id="SvgjsTspan1153" dy="26" x="0"><tspan id="SvgjsTspan1154" style="text-decoration:;">7. 卸载：卸载就是结束了类的生命周期。通常4种情况，导致卸载。</tspan></tspan><tspan id="SvgjsTspan1155" dy="26" x="0"><tspan id="SvgjsTspan1156" style="text-decoration:;">       1. 执行了System.exit(方法</tspan></tspan><tspan id="SvgjsTspan1157" dy="26" x="0"><tspan id="SvgjsTspan1158" style="text-decoration:;">       2. 程序正常执行结束</tspan></tspan><tspan id="SvgjsTspan1159" dy="26" x="0"><tspan id="SvgjsTspan1160" style="text-decoration:;">       3. 程序在执行过程中遇到了异常或错误而异常终止</tspan></tspan><tspan id="SvgjsTspan1161" dy="26" x="0"><tspan id="SvgjsTspan1162" style="text-decoration:;">       4. 由于操作系统出现错误而导致Java虚拟机进程终止</tspan></tspan></text></g></g><g id="SvgjsG1163" transform="translate(152.4999999999999,716.5000000000005)"><path id="SvgjsPath1164" d="M 0 0L 693.6666666666669 0L 693.6666666666669 65.5555597941077L 0 65.5555597941077Z" stroke="none" fill="none"></path><g id="SvgjsG1165"><text id="SvgjsText1166" font-family="微软雅黑" text-anchor="start" font-size="13px" width="694px" fill="#323232" font-weight="400" align="top" lineHeight="200%" anchor="start" family="微软雅黑" size="13px" weight="400" font-style="" opacity="1" y="-7.5" transform="rotate(0)"><tspan id="SvgjsTspan1167" dy="26" x="0"><tspan id="SvgjsTspan1168" style="text-decoration:;">5. 类的初始化：调用&lt;clinit&gt;方法，用于静态变量或静态块的初始化。当类class初始化的时候，调用该方法。详见下文    </tspan></tspan><tspan id="SvgjsTspan1169" dy="26" x="0"><tspan id="SvgjsTspan1170" style="text-decoration:;">                        和后面一篇文章讲解类的初始化，包括类的初始化顺序和类的主动引用与被动引用。</tspan></tspan></text></g></g></svg>